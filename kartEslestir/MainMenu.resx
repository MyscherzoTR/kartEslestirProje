<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEgAAABICAYAAABV7bNHAAAABGdBTUEAALGPC/xhBQAAA+ZJREFUeF7t
        Wk1PFEEQ5Sf4E/wJ/gTPZhdmelFgVxAMfiQGMCghXpALUS/IgcSYGOFgEMNBz8ZkSQQuJsrBRC8E8Kgm
        ePDe9uut2m1mZ4fZmN3t6emXvGSYqa6uenRXd89On4eHh4eHh4eHh4eVKASDF4uBWOsPS1+KoZCgvlb3
        8IzM8odLQXChGIZVFqU1wypsqVk+UBNHnLAIo1PTcuH1plze2dXENe41RBInuRHJFEeUK1qQV79+xxLP
        YJMrkXhaIfG14x+xwpiETUOksEpu3IQuyLXRkDhyooQtt3O6cKsRsI4kUV/ihEhioyaF6+TOPfBSjiIc
        J0IS0QZt4YPcuYfaCGhvejHNaUbu3IMX6Ayo5PaR4P9MMfggd+6hXqSnZ2JFSCLa1ARyuEj7ZT4FVJLb
        SFRUrqbfKCpbEmib3LgLHBcKofjDIiWNJDxjcdAmV+cxFglEfVnYfCOf7u5p4rpRc3ImDgMJq+T1dDuD
        27kTx0StcOvVTW8BiOo6XHe+IEcRBMH5QlCaUcnjRI9XHomvMJT9OTqeKNuwirbwQY/dQiEQD0kUc/qA
        sSIZ4jTZwxeZuQG8X+YEB0bKcnh5RY5ubulrTtoUyRQHNrBFG8NewieZZxuFMFzhpIaWHskbX7/JWwdH
        mtc/7jaJFBUHNmyPtvDB/uCbuskmzJ0zEuNETUZFaiWOyVMiZbmQqwQOkUTp/lxsosyISIniMOGT7A+p
        u2xB1YhxTnjy0+fYJE2ySGnEAeGT/aMv6jY74KnSamrFEcKkEYfJUw19UbfZAIot/3fbSbhdwjf3k7Sf
        6hmKQSmgTV89UKsoxNueFXGzxljPbtco7FVUx3pXPDQ/KW+/X5J3dp5YRcSE2Fikrh5RePQMlK/I2aNn
        cu7nCyuJ2BCjFqmbo6hfiEUePdGgbr5blBMv5+vE37204VGEmCn8ziNJIHNY22RjjUBjq7P6PhN/99IG
        97sukFo+76JTMVlpCsg2IkbEipgp/M7D3AheW71nZaFGTIiN4+zqKgbQa9J6ADazZ69FMK/NXydspBXv
        jLCdt5EUnkemgWMJXrJ3gvBN3WQbHTnYdvsA2mmYq96wKMsHl+faIto0BHL0ExiVnP6peVhU5MHYnpQT
        x6kIW7Qhgdz9woNek+ifmJHw3/HvsYKYhI0hzr4zdacVsAvnvdPM4FSiSHgGG9jm6gsP7FFoRMiVocex
        4oB4xna529eYK9vGyPMmcXCPnzu3YqWFubJ9qGzVxcF1XRxXV6y0UCKcWtlys2KlRXRly9WKlRbmygbm
        8pvEs2CubP4k3gJ6ZcvriuXh4eHh4eHh4ZEl9PX9A8O1J7/l/A8lAAAAAElFTkSuQmCC
</value>
  </data>
</root>